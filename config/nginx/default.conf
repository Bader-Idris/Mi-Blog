server {
  listen 80;
  # server_name example.com;

  server_tokens off;
  # more_clear_headers Server; this removes sever name for req.headers

  # this is to send files without caching, or use max-age=3600 using seconds! so this is an hour
  add_header Cache-Control max-age=00;
  # add_header Cache-Control "no-cache"; ðŸ”´ðŸ”´ðŸ”´ðŸ”´ don't stay as 00

  location /public {
    alias /usr/share/nginx/html/public;
  }
  location /views {
    alias /usr/share/nginx/html/views;
  }
  location / {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # ðŸ”´ðŸ”´ proxy_set_header Host $http_host; allows ports while $host is for prod
    proxy_set_header X-Nginx-Proxy true;
    proxy_pass http://my-blog:3000;
    proxy_redirect off;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
  location /api {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # proxy_set_header Host $http_host;
    proxy_set_header Host $host;
    proxy_set_header X-Nginx-Proxy true;
    proxy_pass http://my-blog:3000/api;
    proxy_redirect off;
    # brought from bito
    # add_header 'Access-Control-Allow-Origin' 'https://www.example.com';
    # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    # add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    # add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
  }
  error_page 404 /404.html;
  location = /404.html {
    alias /etc/nginx/conf.d/404.html;
    internal;
  }
  # events {}
}
# to reload nginx use: docker exec -it <container_id> nginx -s reload

# 6. Implement rate limiting to prevent abuse or brute-force attacks. This can be achieved using the `ngx_http_limit_req_module` or third-party modules like `ngx_http_limit_req_zone`.
# 7. Enable logging and monitoring to detect and respond to potential security incidents. Monitor access logs, error logs, and other relevant logs to identify suspicious activities.